{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Jakov\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Jakov\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Jakov\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakov\\\\Invenio\\\\src\\\\components\\\\signUpCustomer.js\";\nimport React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport '../App.scss';\nReactModal.setAppElement(document.getElementById('root'));\n\nfunction SignUpCustomer() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstName = _useState4[0],\n      setFirstName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastName = _useState6[0],\n      setLastName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmPassword = _useState10[0],\n      setConfirmPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showModal = _useState12[0],\n      setShowModal = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalText = _useState14[0],\n      setModalText = _useState14[1];\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var customers, mText;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return fetch('http://localhost:3000/customers');\n\n            case 3:\n              _context.next = 5;\n              return _context.sent.json();\n\n            case 5:\n              customers = _context.sent;\n\n              if (!(!checkUser(customers, email) && password === confirmPassword)) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 9;\n              return fetch('http://localhost:3000/customers', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  userName: email,\n                  firstName: firstName,\n                  lastName: lastName,\n                  password: password\n                })\n              }).then(function () {\n                setModalText(\"Your account has been created successfully.\");\n                setEmail(\"\");\n                setFirstName(\"\");\n                setLastName(\"\");\n                setPassword(\"\");\n                setConfirmPassword(\"\");\n              }).catch(function () {\n                return setModalText(\"Check your internet connection.\");\n              });\n\n            case 9:\n              modalToggle();\n              _context.next = 15;\n              break;\n\n            case 12:\n              mText = checkUser(customers, email) ? \"Email is already in use.\" : \"Password does not match.\";\n              setModalText(mText);\n              modalToggle();\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var modalToggle = function modalToggle() {\n    setShowModal(!showModal);\n  };\n\n  var contentStyle = {\n    position: 'absolute',\n    left: '7vw',\n    textAlign: 'center',\n    right: '7vw',\n    width: '30vw',\n    margin: '0 auto',\n    border: 'none',\n    background: 'moccasin',\n    overflow: 'auto',\n    borderRadius: '4px',\n    bottom: 'unset',\n    outline: 'none',\n    padding: '35px'\n  };\n  return React.createElement(\"form\", {\n    className: \"customer\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    placeholder: \"E-mail address\",\n    name: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    value: firstName,\n    onChange: function onChange(e) {\n      return setFirstName(e.target.value);\n    },\n    placeholder: \"Ime\",\n    name: \"firstName\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    value: lastName,\n    onChange: function onChange(e) {\n      return setLastName(e.target.value);\n    },\n    placeholder: \"Prezime\",\n    name: \"lastName\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    placeholder: \"Lozinka\",\n    name: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    value: confirmPassword,\n    onChange: function onChange(e) {\n      return setConfirmPassword(e.target.value);\n    },\n    placeholder: \"Potvrdi lozinku\",\n    name: \"confirmPassword\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"REGISTRACIJA\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(ReactModal, {\n    isOpen: showModal,\n    closeTimeoutMS: 200,\n    style: {\n      content: contentStyle\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, modalText), React.createElement(\"button\", {\n    onClick: modalToggle,\n    className: \"modal-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"OK\")));\n}\n\nfunction checkUser(arr, email) {\n  return arr.some(function (el) {\n    return el.userName === email;\n  });\n}\n\nexport default SignUpCustomer;","map":{"version":3,"sources":["C:\\Users\\Jakov\\Invenio\\src\\components\\signUpCustomer.js"],"names":["React","useState","ReactModal","setAppElement","document","getElementById","SignUpCustomer","email","setEmail","firstName","setFirstName","lastName","setLastName","password","setPassword","confirmPassword","setConfirmPassword","showModal","setShowModal","modalText","setModalText","handleSubmit","e","preventDefault","fetch","json","customers","checkUser","method","headers","body","JSON","stringify","userName","then","catch","modalToggle","mText","contentStyle","position","left","textAlign","right","width","margin","border","background","overflow","borderRadius","bottom","outline","padding","target","value","content","arr","some","el"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport '../App.scss';\r\n\r\nReactModal.setAppElement(document.getElementById('root'));\r\n\r\nfunction SignUpCustomer()   {\r\n\r\n  \r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalText, setModalText] = useState(\"\");\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const customers = await (await fetch('http://localhost:3000/customers')).json();\r\n    // console.log(email);\r\n    // console.log(firstName);\r\n    // console.log(lastName);\r\n    // console.log(password);\r\n    // console.log(confirmPassword);\r\n\r\n    if (!checkUser(customers, email) && password === confirmPassword) {\r\n      await fetch('http://localhost:3000/customers', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              userName: email,\r\n              firstName: firstName,\r\n              lastName: lastName,\r\n              password: password\r\n            })\r\n      }).then(() => {\r\n          setModalText(\"Your account has been created successfully.\");\r\n          setEmail(\"\");\r\n          setFirstName(\"\");\r\n          setLastName(\"\");\r\n          setPassword(\"\");\r\n          setConfirmPassword(\"\");\r\n        })\r\n        .catch(() => setModalText(\"Check your internet connection.\"))\r\n      modalToggle();\r\n    } else {\r\n        let mText = checkUser(customers, email) ? \"Email is already in use.\" : \"Password does not match.\";\r\n        setModalText(mText);\r\n        modalToggle();\r\n    }\r\n  }\r\n\r\n  const modalToggle = () => {\r\n    setShowModal(!showModal);\r\n  }\r\n  \r\n  const contentStyle = {\r\n    position: 'absolute',\r\n    left: '7vw',\r\n    textAlign: 'center',\r\n    right: '7vw',\r\n    width: '30vw',\r\n    margin: '0 auto',\r\n    border: 'none',\r\n    background: 'moccasin',\r\n    overflow: 'auto',\r\n    borderRadius: '4px',\r\n    bottom: 'unset',\r\n    outline: 'none',\r\n    padding: '35px',\r\n  }\r\n  \r\n    \r\n    return (\r\n      \r\n        \r\n        <form className=\"customer\" onSubmit={handleSubmit}>\r\n\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            placeholder=\"E-mail address\"\r\n            name=\"email\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={firstName}\r\n            onChange={e => setFirstName(e.target.value)}\r\n            placeholder=\"Ime\"\r\n            name=\"firstName\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={lastName}\r\n            onChange={e => setLastName(e.target.value)}\r\n            placeholder=\"Prezime\"\r\n            name=\"lastName\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            placeholder=\"Lozinka\"\r\n            name=\"password\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={e => setConfirmPassword(e.target.value)}\r\n            placeholder=\"Potvrdi lozinku\"\r\n            name=\"confirmPassword\"\r\n            required\r\n          />\r\n          <input type=\"submit\" value=\"REGISTRACIJA\" />\r\n          <ReactModal\r\n            isOpen={showModal}\r\n            closeTimeoutMS={200}\r\n            style={{content: contentStyle}}\r\n          >\r\n            <div>{modalText}</div>\r\n            <button onClick={modalToggle} className=\"modal-button\">OK</button>\r\n          </ReactModal>\r\n       \r\n      </form>\r\n    );\r\n  }\r\n\r\nfunction checkUser(arr, email) {\r\n  return arr.some(el => {\r\n    return el.userName === email\r\n  })\r\n}\r\n\r\nexport default SignUpCustomer;"]},"metadata":{},"sourceType":"module"}