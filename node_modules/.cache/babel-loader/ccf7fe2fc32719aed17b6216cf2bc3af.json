{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Jakov\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Jakov\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Jakov\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Jakov\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakov\\\\Invenio\\\\src\\\\components\\\\post.js\";\nimport React, { useState } from 'react';\n\nfunction Post(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      like = _useState2[0],\n      setLike = _useState2[1];\n\n  var isLiked = props.post.likedBy.includes(props.userProps.id);\n  var likes = props.post.likes;\n\n  var likeFunction =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:3000/posts/' + props.post.id, {\n                method: 'PATCH',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  likes: props.post.likes + 1,\n                  likedBy: [].concat(_toConsumableArray(props.post.likedBy), [props.userProps.id])\n                })\n              });\n\n            case 2:\n              setLike(!like);\n              likes = likes + 1;\n              isLiked = !isLiked;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function likeFunction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    className: \"post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.post.picture,\n    alt: \"post-pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.post.userName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.post.description), isLiked ? React.createElement(\"span\", {\n    className: \"liked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, likes) : React.createElement(\"span\", {\n    className: \"likes\",\n    onClick: likeFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, likes), React.createElement(\"span\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.post.comments.length)));\n}\n\nexport default Post;","map":{"version":3,"sources":["C:\\Users\\Jakov\\Invenio\\src\\components\\post.js"],"names":["React","useState","Post","props","like","setLike","isLiked","post","likedBy","includes","userProps","id","likes","likeFunction","fetch","method","headers","body","JSON","stringify","picture","userName","description","comments","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,SAASC,IAAT,CAAeC,KAAf,EAAsB;AAAA,kBAEMF,QAAQ,CAAC,KAAD,CAFd;AAAA;AAAA,MAEXG,IAFW;AAAA,MAELC,OAFK;;AAIlB,MAAIC,OAAO,GAAGH,KAAK,CAACI,IAAN,CAAWC,OAAX,CAAmBC,QAAnB,CAA4BN,KAAK,CAACO,SAAN,CAAgBC,EAA5C,CAAd;AAEA,MAAIC,KAAK,GAAGT,KAAK,CAACI,IAAN,CAAWK,KAAvB;;AAEA,MAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACXC,KAAK,CAAC,iCAA+BX,KAAK,CAACI,IAAN,CAAWI,EAA3C,EAA+C;AACtDI,gBAAAA,MAAM,EAAE,OAD8C;AAEtDC,gBAAAA,OAAO,EAAE;AACL,4BAAS,kBADJ;AAEL,kCAAe;AAFV,iBAF6C;AAMtDC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBP,kBAAAA,KAAK,EAAET,KAAK,CAACI,IAAN,CAAWK,KAAX,GAAmB,CADT;AAEjBJ,kBAAAA,OAAO,+BAAML,KAAK,CAACI,IAAN,CAAWC,OAAjB,IAA0BL,KAAK,CAACO,SAAN,CAAgBC,EAA1C;AAFU,iBAAf;AANgD,eAA/C,CADM;;AAAA;AAajBN,cAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAQ,cAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACAN,cAAAA,OAAO,GAAG,CAACA,OAAX;;AAfiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZO,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAmBA,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEV,KAAK,CAACI,IAAN,CAAWa,OAArB;AAA8B,IAAA,GAAG,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIjB,KAAK,CAACI,IAAN,CAAWc,QAAf,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,KAAK,CAACI,IAAN,CAAWe,WAAf,CAFJ,EAGKhB,OAAO,GACJ;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBM,KAAzB,CADI,GAGJ;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAwB,IAAA,OAAO,EAAEC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDD,KAAhD,CANR,EASI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BT,KAAK,CAACI,IAAN,CAAWgB,QAAX,CAAoBC,MAAhD,CATJ,CAFJ,CADJ;AAiBH;;AAED,eAAetB,IAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nfunction Post (props) {\r\n\r\n    const [like, setLike] = useState(false);\r\n\r\n    let isLiked = props.post.likedBy.includes(props.userProps.id);\r\n\r\n    let likes = props.post.likes;\r\n\r\n    const likeFunction = async () => {\r\n        await fetch('http://localhost:3000/posts/'+props.post.id, {\r\n            method: 'PATCH',\r\n            headers: { \r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                likes: props.post.likes + 1,\r\n                likedBy: [...props.post.likedBy, props.userProps.id]\r\n            })\r\n        });\r\n\r\n        setLike(!like);\r\n        likes = likes + 1;\r\n        isLiked = !isLiked;\r\n    \r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <img src={props.post.picture} alt=\"post-pic\" />\r\n            <div>\r\n                <p>{props.post.userName}</p>\r\n                <p>{props.post.description}</p>\r\n                {isLiked ? (\r\n                    <span className=\"liked\">{likes}</span>\r\n                ) : (\r\n                    <span className=\"likes\" onClick={likeFunction}>{likes}</span>\r\n                )}\r\n                \r\n                <span className=\"comments\">{props.post.comments.length}</span>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}